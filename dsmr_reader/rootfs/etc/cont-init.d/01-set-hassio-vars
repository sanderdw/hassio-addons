#!/usr/bin/with-contenv bashio

#---------------------------------------------------------------------------------------------------------------------------
# FUNCTIONS
#---------------------------------------------------------------------------------------------------------------------------
function _info() { printf "\\r[ \\033[00;34mINFO\\033[0m ] %s\\n" "$@"; }

#---------------------------------------------------------------------------------------------------------------------------
# HOMEASSISTANT Add-On OVERRIDES
#---------------------------------------------------------------------------------------------------------------------------

function _hass {
  ADDON_VERSON=$(bashio::addon.version)
  bashio::log.blue "Home Assistant Add-on release: ${ADDON_VERSON}"
  CHECK_UPDATE=$(curl -s "https://api-check.duckdns.org/dsmr-reader-addon/${ADDON_VERSON}")
  if [[ "$CHECK_UPDATE" == *"response_string"* ]]; then
    OUTPUT=$(echo $CHECK_UPDATE | jq --raw-output .response_string)
    bashio::log.blue "$OUTPUT"
  else
    bashio::log.blue "Home Assistant Add-on: Update check failed"
  fi
  CONFIG_PATH=/data/options.json
  if [ -z "${DJANGO_DATABASE_HOST}" ] || [ "${DJANGO_DATABASE_HOST}" == 'dsmrdb' ]; then
    bashio::log.blue "Configuring Home Assistant Addon options"
    printf $(jq --raw-output '.DSMRREADER_ADMIN_USER' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_ADMIN_USER
    printf $(jq --raw-output '.DSMRREADER_ADMIN_PASSWORD' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_ADMIN_PASSWORD
    printf $(jq --raw-output '.DJANGO_DATABASE_NAME' $CONFIG_PATH) > /var/run/s6/container_environment/DJANGO_DATABASE_NAME
    printf $(jq --raw-output '.DJANGO_DATABASE_USER' $CONFIG_PATH) > /var/run/s6/container_environment/DJANGO_DATABASE_USER
    printf $(jq --raw-output '.DJANGO_DATABASE_PASSWORD' $CONFIG_PATH) > /var/run/s6/container_environment/DJANGO_DATABASE_PASSWORD
    printf $(jq --raw-output '.DJANGO_DATABASE_HOST' $CONFIG_PATH) > /var/run/s6/container_environment/DJANGO_DATABASE_HOST
    printf $(jq --raw-output '.DJANGO_DATABASE_PORT' $CONFIG_PATH) > /var/run/s6/container_environment/DJANGO_DATABASE_PORT
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_MODE' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_MODE
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_SERIAL_PORT' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_SERIAL_PORT
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_INPUT_METHOD' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_INPUT_METHOD
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_SERIAL_BAUDRATE' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_SERIAL_BAUDRATE
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_NETWORK_HOST' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_NETWORK_HOST
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_NETWORK_PORT' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_NETWORK_PORT
    printf $(jq --raw-output '.DSMRREADER_REMOTE_DATALOGGER_SLEEP' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_REMOTE_DATALOGGER_SLEEP
    printf $(jq --raw-output '.DSMRREADER_LOGLEVEL' $CONFIG_PATH) > /var/run/s6/container_environment/DSMRREADER_LOGLEVEL
    printf "true" > /var/run/s6/container_environment/ENABLE_IFRAME
  fi
  if [ "$(bashio::config 'ENABLE_INGRESS')" == 'true' ]; then
    bashio::log.blue "Home Assistant Add-on release: $(bashio::config 'ENABLE_INGRESS')"
  fi
}

#---------------------------------------------------------------------------------------------------------------------------
# MAIN
#---------------------------------------------------------------------------------------------------------------------------

_hass
# Patch ingress server to contain the correct portnumbers and paths
ingress_port=$(bashio::addon.ingress_port)
bashio::log.blue " $(bashio::addon.ingress_port)"
ingress_interface=$(bashio::addon.ip_address)
bashio::log.blue " $(bashio::addon.ip_address)"
ingress_entry=$(bashio::addon.ingress_entry)
bashio::log.blue " $(bashio::addon.ingress_entry)"
django_static="$(bashio::addon.ingress_entry)/static/"
django_url="$(bashio::addon.ingress_entry)/"
bashio::log.blue "${django_static}"
sed -i "s/%%port%%/${ingress_port}/g" /etc/nginx/http.d/ingress.conf
sed -i "s/%%interface%%/${ingress_interface}/g" /etc/nginx/http.d/ingress.conf
sed -i "s#%%entry%%#${ingress_entry}#g" /etc/nginx/http.d/ingress.conf
printf ${django_static} > /var/run/s6/container_environment/DJANGO_STATIC_URL
printf ${django_url} > /var/run/s6/container_environment/DJANGO_FORCE_SCRIPT_NAME
printf 'True' > /var/run/s6/container_environment/DJANGO_USE_X_FORWARDED_HOST

# Patch resolver to match DNS
dns_host=$(bashio::dns.host)
bashio::log.blue " $(bashio::dns.host)"
sed -i "s/%%dns_host%%/${dns_host}/g" /etc/nginx/http.d/resolver.conf